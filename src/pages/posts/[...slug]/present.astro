---
import { getCollection, type CollectionEntry } from 'astro:content';
import { getLanguageFromURL } from '../../../utils/i18n';
import type { SupportedLanguage } from '../../../types/i18n';
import { findPresentationByBlogPost } from '../../../utils/presentations';
import PresentationMode from '../../../components/PresentationMode.astro';

// Since we're in SSR mode, we don't use getStaticPaths
// Instead, we handle the routing dynamically

const { slug } = Astro.params;

// Extract blog post slug from the URL
const slugString = slug as string;
const blogPostSlug = slugString?.replace('/present', '').split('/').pop() || '';

// Get the current language from URL
const currentLang = getLanguageFromURL(Astro.url.pathname) || 'en';

// Verify this presentation exists and matches the route
const presentationInfo = await findPresentationByBlogPost(blogPostSlug, currentLang as SupportedLanguage);

if (!presentationInfo) {
    return Astro.redirect('/404');
}

// Get the actual presentation from the collection
const presentations = await getCollection('presentations');
const presentation = presentations.find((p) => p.data.blogPostSlug === blogPostSlug && p.data.language === currentLang);

if (!presentation) {
    return Astro.redirect('/404');
}
---

<PresentationMode presentation={presentation} language={currentLang as SupportedLanguage} blogPostSlug={blogPostSlug} />
