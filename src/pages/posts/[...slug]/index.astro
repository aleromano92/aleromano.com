---
import { getCollection } from 'astro:content';
import BlogPostLayout from '../../../layouts/BlogPostLayout.astro';
import { getLanguageFromURL } from '../../../utils/i18n';
import { findPostBySlug, getLocalizedPostUrl } from '../../../utils/posts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');

  return posts.map((post) => {
    const [lang, ...slugParts] = post.slug.split('/');
    const slug = slugParts.join('/');

    // Find the original post if this is a translation
    let originalPost;
    if (post.data.originalLink) {
      originalPost = posts.find((p) => {
        const [pLang, ...pSlugParts] = p.slug.split('/');
        return pLang === 'en' && pSlugParts.join('/') === slug;
      });
    }

    return {
      params: {
        slug: lang === 'en' ? slug : `${lang}/${slug}`,
      },
      props: {
        post,
        originalPost,
      },
    };
  });
}

const { post, originalPost } = Astro.props;
const { Content } = await post.render();
export const prerender = true;
// Get the current language from URL for the language switcher
const currentLang = post.slug.split('/')[0];
---

<BlogPostLayout frontmatter={post.data} currentLang={currentLang} originalPost={originalPost}>
  <Content />
</BlogPostLayout>
