---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getLanguageFromURL } from '../utils/i18n';
import type { SupportedLanguage } from '../types/i18n';

export interface NotFoundTranslations {
  pageTitle: string;
  pageDescription: string;
  heading: string;
  description: string;
  backButton: string;
}

export const notFoundTranslations: Record<SupportedLanguage, NotFoundTranslations> = {
  en: {
    pageTitle: 'Page Not Found',
    pageDescription: 'The page you are looking for does not exist.',
    heading: '404',
    description: 'The page you are looking for does not exist.',
    backButton: 'Go back to homepage',
  },
  it: {
    pageTitle: 'Pagina Non Trovata',
    pageDescription: 'La pagina che stai cercando non esiste.',
    heading: '404',
    description: 'La pagina che stai cercando non esiste.',
    backButton: 'Torna alla homepage',
  },
};

export function getNotFoundTranslations(language: SupportedLanguage): NotFoundTranslations {
  return notFoundTranslations[language];
}

const pathname = new URL(Astro.request.url).pathname;
const currentLang = (getLanguageFromURL(pathname) || 'en') as SupportedLanguage;

// Get translations for the current language
const t = getNotFoundTranslations(currentLang);

// Set language info for BaseLayout
const i18nData = {
  currentLang,
};

// Determine the homepage URL based on language
const homepageUrl = currentLang === 'it' ? '/it/' : '/';

Astro.response.status = 404;

export const prerender = true;
---

<BaseLayout pageTitle={t.pageTitle} description={t.pageDescription} i18nData={i18nData}>
  <div class="error-container">
    <h1>{t.heading}</h1>
    <p>{t.description}</p>
    <div class="actions">
      <a href={homepageUrl} class="button secondary">{t.backButton}</a>
    </div>
  </div>
</BaseLayout>

<style>
  @import '../styles/buttons.css';

  .error-container {
    text-align: center;
    padding: var(--space-xl) 0;
  }

  h1 {
    font-size: 6rem;
    margin: 0;
    color: var(--color-accent);
  }

  p {
    font-size: 1.2rem;
    margin: var(--space-md) 0 var(--space-xl);
  }

  .actions {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    align-items: center;
  }

  @media (min-width: 636px) {
    .actions {
      flex-direction: row;
      justify-content: center;
    }
  }
</style>
