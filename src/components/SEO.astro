---
import { getAlternateLinks } from '../utils/i18n';
import type { ImageMetadata } from 'astro';

export interface Props {
    title: string;
    description: string;
    currentUrl: string;
    currentLang: 'en' | 'it';
    type?: 'website' | 'article';
    image?: ImageMetadata;
    imageAlt?: string;
    publishedTime?: Date;
    author?: string;
    structuredData?: object;
}

const {
    title,
    description,
    currentUrl,
    currentLang,
    type = 'website',
    image,
    imageAlt,
    publishedTime,
    author,
    structuredData,
} = Astro.props;

// Generate canonical URL
const canonicalUrl = new URL(currentUrl, 'https://aleromano.com').href;

// Generate language alternate links
const alternateLinks = getAlternateLinks(new URL(currentUrl).pathname);

// Generate image URL if provided
const imageUrl = image ? new URL(image.src, 'https://aleromano.com').href : undefined;
---

<!-- Basic SEO Meta Tags -->
<meta name="description" content={description} />
<link rel="canonical" href={canonicalUrl} />
<link rel="sitemap" type="application/xml" href="/sitemap.xml" />

<!-- Language Alternates -->
{alternateLinks.map(({ href, hreflang }) => <link rel="alternate" hreflang={hreflang} href={href} />)}

<!-- Open Graph Tags -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:locale" content={currentLang === 'en' ? 'en_US' : 'it_IT'} />
<meta property="og:site_name" content="Alessandro Romano" />

{
    image && imageUrl && (
        <>
            <meta property="og:image" content={imageUrl} />
            <meta property="og:image:alt" content={imageAlt || ''} />
            <meta property="og:image:width" content="1200" />
            <meta property="og:image:height" content="630" />
        </>
    )
}

<!-- Twitter Card Tags -->
<meta name="twitter:card" content={image ? 'summary_large_image' : 'summary'} />
<meta name="twitter:site" content="@_aleromano" />
<meta name="twitter:creator" content="@_aleromano" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />

{image && imageUrl && <meta name="twitter:image" content={imageUrl} />}

<!-- Article-specific Tags (for blog posts) -->
{
    type === 'article' && (
        <>
            {publishedTime && <meta property="article:published_time" content={publishedTime.toISOString()} />}
            {author && <meta property="article:author" content={author} />}
            <meta property="article:section" content="Technology" />
        </>
    )
}

<!-- Structured Data / JSON-LD -->
{structuredData && <script is:inline type="application/ld+json" set:html={JSON.stringify(structuredData)} />}
