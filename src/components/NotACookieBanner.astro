---
import type { SupportedLanguage } from '../types/i18n';

export interface NotACookieBannerTranslations {
    title: string;
    closeLabel: string;
    paragraph1: string;
    paragraph2: string;
    paragraph3: string;
    euAccText: string;
    aveEuropeText: string;
    drivePositiveChange: string;
}

export const notACookieBannerTranslations: Record<SupportedLanguage, NotACookieBannerTranslations> = {
    en: {
        title: 'This is NOT a cookie banner',
        closeLabel: 'Close banner',
        paragraph1:
            "Cookie banners are a perfect example of a <strong>bad implementation</strong> of a good-in-theory principle. They've created an anti-pattern in user behavior where people immediately click and dismiss banners without reading them, making the entire exercise <strong>pointless</strong>. Meanwhile, EU bureaucracy continues to hinder the investment power of EU companies with such <strong>misguided regulations</strong>.",
        paragraph2:
            'My website does <strong>not use any form of analytics</strong> at the current moment. If I implement analytics in the future, it will probably be a <strong>self-hosted solution</strong> (custom-built or open source) without any tracking or targeting data.',
        paragraph3:
            'I support initiatives like {euAcc} and {aveEurope} to spread awareness and <strong>drive positive change</strong>.',
        euAccText: 'eu/acc',
        aveEuropeText: 'AVE Europe',
        drivePositiveChange: 'drive positive change',
    },
    it: {
        title: 'Questo NON è un banner dei cookie',
        closeLabel: 'Chiudi banner',
        paragraph1:
            "I banner dei cookie sono un perfetto esempio di <strong>cattiva implementazione</strong> di un principio buono in teoria. Hanno creato un anti-pattern nel comportamento degli utenti dove le persone cliccano immediatamente e chiudono i banner senza leggerli, rendendo l'intero esercizio <strong>inutile</strong>. Nel frattempo, la burocrazia UE continua a ostacolare il potere di investimento delle aziende europee con tali <strong>regolamentazioni sbagliate</strong>.",
        paragraph2:
            'Il mio sito web <strong>non utilizza alcuna forma di analytics</strong> al momento. Se implementerò analytics in futuro, probabilmente sarà una <strong>soluzione self-hosted</strong> (custom o open source) senza alcun dato di tracciamento o targeting.',
        paragraph3:
            'Supporto iniziative come {euAcc} e {aveEurope} per diffondere consapevolezza e <strong>promuovere cambiamenti positivi</strong>.',
        euAccText: 'eu/acc',
        aveEuropeText: 'AVE Europe',
        drivePositiveChange: 'promuovere cambiamenti positivi',
    },
};

export function getNotACookieBannerTranslations(language: SupportedLanguage): NotACookieBannerTranslations {
    return notACookieBannerTranslations[language];
}

interface Props {
    showAutomatically?: boolean;
    language: SupportedLanguage;
}

const { showAutomatically = false, language } = Astro.props;

// Get translations for the current language
const t = getNotACookieBannerTranslations(language);

// Process paragraph3 to replace placeholders with actual HTML links
const paragraph3Html = t.paragraph3
    .replace('{euAcc}', `<a href="https://eu-acc.com/" target="_blank" rel="noopener noreferrer">${t.euAccText}</a>`)
    .replace(
        '{aveEurope}',
        `<a href="https://ave-europa.eu/" target="_blank" rel="noopener noreferrer">${t.aveEuropeText}</a>`,
    );
---

<div id="not-a-cookie-banner" class="banner-overlay">
    <div class="banner-content">
        <button class="close-btn" aria-label={t.closeLabel}>&times;</button>
        <h2>{t.title}</h2>
        <div class="banner-text">
            <p set:html={t.paragraph1} />
            <p set:html={t.paragraph2} />
            <p set:html={paragraph3Html} />
        </div>
    </div>
</div>

<script define:vars={{ showAutomatically }}>
    const banner = document.getElementById('not-a-cookie-banner');
    const closeBtn = banner?.querySelector('.close-btn');

    // Check if banner should be shown
    const bannerDismissed = localStorage.getItem('not-a-cookie-banner-dismissed');

    if (!bannerDismissed && showAutomatically) {
        setTimeout(() => {
            banner?.classList.add('show');
        }, 1000);
    } else {
        // Hide banner immediately
        if (banner) banner.style.display = 'none';
    }

    // Close banner functionality
    closeBtn?.addEventListener('click', () => {
        banner?.classList.remove('show');
        localStorage.setItem('not-a-cookie-banner-dismissed', 'true');
        setTimeout(() => {
            if (banner) banner.style.display = 'none';
        }, 300);
    });

    // Global function to show banner again (for footer link)
    window.showNotACookieBanner = () => {
        if (banner) {
            banner.style.display = 'flex';
            setTimeout(() => {
                banner?.classList.add('show');
            }, 10);
        }
    };
</script>

<style>
    .banner-overlay {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        height: 50vh;
        background: var(--color-bg);
        border-top: 2px solid var(--color-border);
        box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: var(--space-lg);
        transform: translateY(100%);
        transition: transform 0.3s ease-out;
        overflow-y: auto;
    }

    .banner-overlay.show {
        transform: translateY(0);
    }

    .banner-content {
        max-width: 800px;
        width: 100%;
        position: relative;
    }

    .close-btn {
        position: absolute;
        top: 0;
        right: 0;
        background: none;
        border: none;
        font-size: 2rem;
        cursor: pointer;
        color: var(--color-text);
        padding: var(--space-sm);
        line-height: 1;
        transition: color 0.2s ease;
    }

    .close-btn:hover {
        color: var(--color-accent);
    }

    .banner-content h2 {
        margin: 0 0 var(--space-md) 0;
        font-size: 2rem;
        color: var(--color-text);
    }

    .banner-text p {
        margin-bottom: var(--space-sm);
        line-height: 1.6;
        color: var(--color-text);
    }

    .banner-text a {
        color: var(--color-accent);
        text-decoration: underline;
    }

    .banner-text a:hover {
        text-decoration: none;
    }

    @media (max-width: 768px) {
        .banner-overlay {
            height: 70vh;
            padding: var(--space-sm);
            align-items: flex-start;
            padding-top: var(--space-md);
        }

        .banner-content {
            padding: var(--space-sm);
            max-height: 100%;
            overflow-y: auto;
        }

        .banner-content h2 {
            font-size: 1.4rem;
            margin: 0 var(--space-lg) var(--space-sm) 0;
            line-height: 1.3;
        }

        .banner-text p {
            font-size: 0.9rem;
            margin-bottom: var(--space-xs);
        }

        .close-btn {
            font-size: 1.5rem;
            padding: var(--space-xs);
            top: -0.5rem;
            right: -0.5rem;
        }
    }

    @media (max-width: 480px) {
        .banner-overlay {
            height: 75vh;
            padding: var(--space-xs);
        }

        .banner-content h2 {
            font-size: 1.2rem;
        }

        .banner-text p {
            font-size: 0.85rem;
        }
    }

    :global([data-theme='dark']) .banner-overlay {
        box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3);
    }
</style>
