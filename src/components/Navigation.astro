---
import NavLink from './NavLink.astro';
import { getLocalizedPathname } from '../utils/i18n';
import type { SupportedLanguage } from '../types/i18n';

export interface NavigationTranslations {
  home: string;
  about: string;
  blog: string;
  contact: string;
}

export const navigationTranslations: Record<SupportedLanguage, NavigationTranslations> = {
  en: {
    home: 'HOME',
    about: 'ABOUT',
    blog: 'BLOG',
    contact: 'CONTACT',
  },
  it: {
    home: 'HOME',
    about: 'CHI SONO',
    blog: 'BLOG',
    contact: 'CONTATTI',
  },
};

export function getNavigationTranslations(language: SupportedLanguage): NavigationTranslations {
  return navigationTranslations[language];
}

interface Props {
  language: SupportedLanguage;
}

const { language } = Astro.props;

const currentUrl = Astro.request.url;

// Base routes (always in English format)
const BASE_ROUTES = ['/', '/about', '/blog', '/contact'] as const;

// Get translations for labels
const t = getNavigationTranslations(language);

// Create route-to-label mapping
const routeLabelMap = new Map([
  ['/', t.home],
  ['/about', t.about],
  ['/blog', t.blog],
  ['/contact', t.contact],
]);

// Create route mapping with href and label
const routeMap = BASE_ROUTES.map((route) => ({
  href: getLocalizedPathname(route, language),
  label: routeLabelMap.get(route) || route.slice(1).toUpperCase(),
}));
---

<nav>
  {routeMap.map((route) => <NavLink href={route.href} label={route.label} currentUrl={currentUrl} />)}
</nav>

<style>
  nav {
    display: flex;
    align-items: center;
    gap: clamp(0.75rem, 3vw, 2rem);
    margin-left: auto;
    margin-right: auto;
  }

  @media (max-width: 636px) {
    /* Hardcoded from --breakpoint-tablet */
    nav {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 100vh;
      background: var(--color-bg);
      padding: 5rem 2rem 2rem;
      z-index: 100;
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    nav.expanded {
      display: flex;
    }
  }
</style>
