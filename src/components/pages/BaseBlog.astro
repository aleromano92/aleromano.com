---
import type { SupportedLanguage } from '../../types/i18n';
import type { CollectionEntry } from 'astro:content';

export interface BlogTranslations {
    pageTitle: string;
    pageDescription: string;
    heading: string;
    subheading: string;
    noPostsMessage: string;
}

export const blogTranslations: Record<SupportedLanguage, BlogTranslations> = {
    en: {
        pageTitle: 'Blog',
        pageDescription: `Alessandro Romano's thoughts.`,
        heading: 'Blog',
        subheading: 'My thoughts on <a href="/posts/tags">various topics.</a>',
        noPostsMessage: 'No posts found.',
    },
    it: {
        pageTitle: 'Blog',
        pageDescription: 'I pensieri di Alessandro Romano.',
        heading: 'Blog',
        subheading: 'I miei pensieri su <a href="/it/posts/tags">vari argomenti.</a>',
        noPostsMessage: 'Nessun articolo trovato.',
    },
};

export function getBlogTranslations(language: SupportedLanguage): BlogTranslations {
    return blogTranslations[language];
}

interface Props {
    language: SupportedLanguage;
    posts: CollectionEntry<'blog'>[];
}

const { language, posts } = Astro.props;

// Get translations for the current language
const t = getBlogTranslations(language);
---

<p set:html={t.subheading} />
{posts.length > 0 ? <slot /> : <p>{t.noPostsMessage}</p>}
