---
import BaseLayout from './BaseLayout.astro';
import { Image } from 'astro:assets';
import Tags from '../components/posts/Tags.astro';
import { getReadingTime } from '../utils/reading-time';
import ImageModal from '../components/ImageModal.astro';
import { findPresentationByBlogPost } from '../utils/presentations';

const { frontmatter, currentLang, originalPost } = Astro.props;
const pageTitle = frontmatter.title;

// Get the content as a string for reading time calculation
const content = await Astro.slots.render('default');
const readingTime = getReadingTime(content);

// Check if a presentation exists for this blog post
const presentationInfo = await findPresentationByBlogPost(Astro.url.pathname, currentLang);

// Pass language info to BaseLayout
const i18nData = {
  currentLang,
  originalPost: originalPost ? `/posts/${originalPost.slug.split('/').slice(1).join('/')}` : frontmatter.originalLink,
};

// Determine back link text based on language
const backText = currentLang === 'it' ? 'Torna alla lista' : 'Back to overview';

// Contact me footer text
const contactMeFooterText =
  currentLang === 'it'
    ? 'Se questo articolo ti è stato utile, condividilo con chi potrebbe beneficiarne. E se vuoi <strong>discutere</strong> di questi temi, <a href="/contact?reason=blogpost&title=' +
      encodeURIComponent(frontmatter.title) +
      '">scrivimi</a>.'
    : 'If this article was useful to you, share it with who might benefit from it. And if you want <strong>to discuss</strong> these topics, <a href="/contact?reason=blogpost&title=' +
      encodeURIComponent(frontmatter.title) +
      '">write to me</a>.';

// Default fallback URL if no history
const fallbackUrl = `/${currentLang === 'it' ? 'it/' : ''}blog`;
---

<BaseLayout
  pageTitle={pageTitle}
  i18nData={i18nData}
  showNotACookieBannerAutomatically={false}
  description={frontmatter.description}
  type="article"
  image={frontmatter.image?.url}
  imageAlt={frontmatter.image?.alt}
  publishedTime={frontmatter.pubDate}
  author={frontmatter.author}
>
  <article class="post">
    <button class="back-link" data-fallback-url={fallbackUrl}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="19" y1="12" x2="5" y2="12"></line>
        <polyline points="12 19 5 12 12 5"></polyline>
      </svg>
      {backText}
    </button>

    <header class="post-header">
      <div class="post-meta">
        <time datetime={frontmatter.pubDate.toISOString()}>
          {
            new Date(frontmatter.pubDate).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })
          }
        </time>
        <span class="reading-time">{readingTime} min read ☕️</span>
      </div>
      <p class="description"><em>{frontmatter.description}</em></p>
      <Tags tags={frontmatter.tags} />

      {
        presentationInfo && (
          <div class="presentation-actions">
            <a
              href={presentationInfo.url}
              class="button"
              title={currentLang === 'it' ? 'Visualizza come presentazione' : 'View as presentation'}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <rect x="2" y="3" width="20" height="14" rx="2" ry="2" />
                <line x1="8" y1="21" x2="16" y2="21" />
                <line x1="12" y1="17" x2="12" y2="21" />
              </svg>
              {currentLang === 'it' ? 'Presentazione' : 'Presentation'}
            </a>
          </div>
        )
      }
    </header>

    {
      frontmatter.image && (
        <div class="featured-image-container">
          <Image
            src={frontmatter.image.url}
            alt={frontmatter.image.alt}
            width={1200}
            height={450}
            class="featured-image"
            quality="high"
            densities={[1, 3]}
          />
        </div>
      )
    }

    <div class="post-content">
      <slot />
    </div>

    <footer class="post-footer">
      <p>Written by {frontmatter.author}</p>
      <p set:html={contactMeFooterText} />
    </footer>
  </article>
</BaseLayout>

<ImageModal />

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const backButton = document.querySelector('.back-link');
    if (!backButton) return;

    backButton.addEventListener('click', () => {
      // If we have history to go back to, use it
      if (window.history.length > 1) {
        window.history.back();
      } else {
        // If no history, use the fallback URL
        const fallbackUrl = backButton.getAttribute('data-fallback-url') || '/blog';
        window.location.href = fallbackUrl;
      }
    });
  });
</script>

<style>
  @import '../styles/buttons.css';

  .back-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-sm);
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.1rem;
    margin-bottom: var(--space-lg);
    transition: all 0.2s ease;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
  }

  .back-link:hover {
    color: var(--color-accent);
    transform: translateX(-4px);
  }

  .back-link svg {
    width: 20px;
    height: 20px;
  }

  .post-header {
    margin-bottom: var(--space-xl);
  }

  .post-meta {
    display: flex;
    gap: var(--space-md);
    color: var(--color-text);
    font-size: 1.3rem;
    margin-bottom: var(--space-md);
  }

  .reading-time {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .reading-time::before {
    content: '•';
    margin-right: var(--space-xs);
  }

  .description {
    font-size: 1.1rem;
    line-height: 1.6;
    margin: var(--space-md) 0;
  }

  .presentation-actions {
    margin-top: var(--space-md);
  }

  .presentation-actions .button {
    display: inline-flex;
    align-items: center;
    gap: var(--space-sm);
  }

  .presentation-actions .button svg {
    width: 18px;
    height: 18px;
  }

  .featured-image-container {
    width: 100vw;
    transform: translateX(-50%);
    max-width: var(--container-max-width);
    margin: var(--space-xl) 0 var(--space-xl) 50%;
  }

  .featured-image {
    width: 100%;
    height: 450px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    object-fit: cover;
  }

  .post-content {
    margin-top: var(--space-xl);
  }

  .post-content :global(img) {
    max-width: 100%;
    max-height: 450px;
    object-fit: contain;
    height: auto;
    display: block;
    margin: var(--space-md) auto;
    border-radius: 8px;
    transition: transform 0.2s ease-in-out;
  }

  .post-content :global(img:hover) {
    transform: scale(1.01);
  }

  .post-footer {
    margin-top: var(--space-md);
    padding-top: var(--space-md);
    font-style: italic;
  }

  .post-content :global(blockquote) {
    margin: var(--space-md) 0;
    padding: var(--space-sm);
    border-radius: 8px;
    background-color: var(--color-secondary);
    border-left: 4px solid var(--color-primary);
    position: relative;
    font-style: italic;
    line-height: 1.6;
  }

  .post-content :global(blockquote p) {
    margin: 0;
    color: var(--color-primary);
    font-size: 1.1rem;
  }

  .post-content :global(blockquote p:not(:last-child)) {
    margin-bottom: var(--space-md);
  }

  .post-content :global(blockquote cite) {
    display: block;
    margin-top: var(--space-sm);
    font-size: 0.9rem;
    font-weight: var(--font-weight-bold);
    font-style: normal;
    color: var(--color-text);
  }

  .post-content :global(code:not(pre code)) {
    background-color: var(--color-secondary);
    color: var(--color-primary);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-size: 0.9em;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  }

  .post-content :global(pre) {
    margin: var(--space-md) 0;
    padding: var(--space-md);
    border-radius: 1rem;
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin: 0 var(--space-md) var(--space-md);
    padding: 0 var(--space-md);
  }
</style>
