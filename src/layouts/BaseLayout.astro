---
import type { ImageMetadata } from 'astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import NotACookieBanner from '../components/NotACookieBanner.astro';
import SEO from '../components/SEO.astro';
import '../styles/theme.css';
import '../styles/global.css';
import defaultProfileImage from '../assets/alepro.png';

export interface Props {
  pageTitle: string;
  i18nData?: {
    currentLang: 'en' | 'it';
    originalPost?: string;
  };
  showNotACookieBannerAutomatically?: boolean;
  description?: string;
  image?: ImageMetadata;
  imageAlt?: string;
  type?: 'website' | 'article';
  publishedTime?: Date;
  author?: string;
  structuredData?: object;
}

const {
  pageTitle,
  i18nData,
  showNotACookieBannerAutomatically,
  description,
  image,
  imageAlt,
  type = 'website',
  publishedTime,
  author,
  structuredData,
} = Astro.props;

// Get current language from i18nData or default to 'en'
const currentLang = i18nData?.currentLang || 'en';

// Set up default image and alt text fallbacks
const finalImage = image || defaultProfileImage;
const defaultImageAlt =
  currentLang === 'it' ? 'Foto profilo di Alessandro Romano' : 'Alessandro Romano profile picture';
const finalImageAlt = imageAlt || defaultImageAlt;

const blogPostBackText = currentLang === 'it' ? 'Torna alla lista' : 'Back to overview';
const blogPostsListUrl = `/${currentLang === 'it' ? 'it/' : ''}blog`;
---

<html lang={currentLang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle + ' | Alessandro Romano'}</title>

    <SEO
      title={pageTitle + ' | Alessandro Romano'}
      description={description || 'Alessandro Romano - Software Engineering Manager and Father'}
      currentUrl={Astro.url.href}
      currentLang={currentLang}
      type={type}
      image={finalImage}
      imageAlt={finalImageAlt}
      publishedTime={publishedTime}
      author={author}
      structuredData={structuredData}
    />
  </head>
  <body>
    <Header i18nData={i18nData} />
    <main class="container">
      {
        type === 'article' && (
          <a href={blogPostsListUrl} class="back-link">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <line x1="19" y1="12" x2="5" y2="12" />
              <polyline points="12 19 5 12 12 5" />
            </svg>
            {blogPostBackText}
          </a>
        )
      }
      <h1 id="top">{pageTitle}</h1>
      <slot />
    </main>
    <Footer language={currentLang} />
    <NotACookieBanner showAutomatically={showNotACookieBannerAutomatically} language={currentLang} />
  </body>
</html>

<style>
  .back-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-sm);
    color: var(--color-text);
    text-decoration: none;
    margin-bottom: var(--space-md);
    transition: all 0.2s ease;
  }

  .back-link:hover {
    color: var(--color-accent);
    transform: translateX(-4px);
  }

  .back-link svg {
    width: 20px;
    height: 20px;
  }
</style>
